{
  "$defs": {
    "BaseExtraction": {
      "properties": {},
      "title": "BaseExtraction",
      "type": "object"
    },
    "BasicRequestConfiguration": {
      "properties": {
        "tech": {
          "const": "basic",
          "default": "basic",
          "title": "Tech"
        },
        "parameters": {
          "$ref": "#/$defs/HTTPRequestParameters"
        },
        "extractions": {
          "items": {
            "$ref": "#/$defs/BaseExtraction"
          },
          "title": "Extractions",
          "type": "array"
        },
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "parameters",
        "name"
      ],
      "title": "BasicRequestConfiguration",
      "type": "object"
    },
    "Credentials": {
      "properties": {
        "username": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The username to attach to the HTTP requests sent for this user. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#access_using_credentials_in_the_url",
          "title": "Username"
        },
        "password": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The password to attach to the HTTP requests sent for this user. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication#access_using_credentials_in_the_url",
          "title": "Password"
        },
        "headers": {
          "description": "A list of headers to attach to every HTTP requests sent for this user",
          "items": {
            "$ref": "#/$defs/HTTPHeader"
          },
          "title": "Headers",
          "type": "array"
        },
        "cookies": {
          "description": "A list of cookies to attach to every HTTP requests sent for this user",
          "items": {
            "$ref": "#/$defs/HTTPCookie"
          },
          "title": "Cookies",
          "type": "array"
        },
        "query_parameters": {
          "description": "A list of query parameters to attach to every HTTP requests sent for this user",
          "items": {
            "$ref": "#/$defs/HTTPQueryParameter"
          },
          "title": "Query Parameters",
          "type": "array"
        },
        "body": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A body to merge with the bodies of every HTTP requests sent for this user",
          "title": "Body"
        }
      },
      "title": "Credentials",
      "type": "object"
    },
    "GraphQLRequestConfiguration": {
      "properties": {
        "tech": {
          "const": "graphql",
          "default": "graphql",
          "title": "Tech"
        },
        "parameters": {
          "$ref": "#/$defs/GraphQLRequestParameters"
        },
        "extractions": {
          "items": {
            "$ref": "#/$defs/HTTPExtraction"
          },
          "title": "Extractions",
          "type": "array"
        }
      },
      "required": [
        "parameters"
      ],
      "title": "GraphQLRequestConfiguration",
      "type": "object"
    },
    "GraphQLRequestParameters": {
      "properties": {
        "url": {
          "title": "Url",
          "type": "string"
        },
        "method": {
          "allOf": [
            {
              "$ref": "#/$defs/HTTPMethod"
            }
          ],
          "default": "POST"
        },
        "headers": {
          "items": {
            "$ref": "#/$defs/HTTPHeader"
          },
          "title": "Headers",
          "type": "array"
        },
        "cookies": {
          "items": {
            "$ref": "#/$defs/HTTPCookie"
          },
          "title": "Cookies",
          "type": "array"
        },
        "query_parameters": {
          "items": {
            "$ref": "#/$defs/HTTPQueryParameter"
          },
          "title": "Query Parameters",
          "type": "array"
        },
        "body": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Body"
        },
        "query": {
          "title": "Query",
          "type": "string"
        },
        "variables": {
          "items": {
            "$ref": "#/$defs/GraphQLVariable"
          },
          "title": "Variables",
          "type": "array"
        }
      },
      "required": [
        "url",
        "query"
      ],
      "title": "GraphQLRequestParameters",
      "type": "object"
    },
    "GraphQLVariable": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "value": {
          "title": "Value"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "title": "GraphQLVariable",
      "type": "object"
    },
    "HTTPCookie": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "name",
        "values"
      ],
      "title": "HTTPCookie",
      "type": "object"
    },
    "HTTPExtraction": {
      "properties": {
        "name": {
          "description": "The name that will be used to store the extracted value",
          "title": "Name",
          "type": "string"
        },
        "location": {
          "allOf": [
            {
              "$ref": "#/$defs/HTTPLocation"
            }
          ],
          "description": "The location where to search for the key"
        },
        "key": {
          "description": "The key to use to extract the value. Its usage depends on the location. For headers, cookies,and query parameters, this key describes the name of the header, cookie or query parameter. For a body location, the key is the field where the token should be injected within the request bodies",
          "title": "Key",
          "type": "string"
        }
      },
      "required": [
        "name",
        "location",
        "key"
      ],
      "title": "HTTPExtraction",
      "type": "object"
    },
    "HTTPHeader": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "name",
        "values"
      ],
      "title": "HTTPHeader",
      "type": "object"
    },
    "HTTPLocation": {
      "enum": [
        "header",
        "cookie",
        "body",
        "query"
      ],
      "title": "HTTPLocation",
      "type": "string"
    },
    "HTTPMethod": {
      "description": "HTTP methods and descriptions\n\nMethods from the following RFCs are all observed:\n\n    * RFC 7231: Hypertext Transfer Protocol (HTTP/1.1), obsoletes 2616\n    * RFC 5789: PATCH Method for HTTP",
      "enum": [
        "CONNECT",
        "DELETE",
        "GET",
        "HEAD",
        "OPTIONS",
        "PATCH",
        "POST",
        "PUT",
        "TRACE"
      ],
      "title": "HTTPMethod",
      "type": "string"
    },
    "HTTPQueryParameter": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "title": "Values",
          "type": "array"
        }
      },
      "required": [
        "name",
        "values"
      ],
      "title": "HTTPQueryParameter",
      "type": "object"
    },
    "HTTPRequestConfiguration": {
      "properties": {
        "tech": {
          "const": "http",
          "default": "http",
          "title": "Tech"
        },
        "parameters": {
          "$ref": "#/$defs/HTTPRequestParameters"
        },
        "extractions": {
          "items": {
            "$ref": "#/$defs/HTTPExtraction"
          },
          "title": "Extractions",
          "type": "array"
        }
      },
      "required": [
        "parameters"
      ],
      "title": "HTTPRequestConfiguration",
      "type": "object"
    },
    "HTTPRequestParameters": {
      "properties": {
        "url": {
          "title": "Url",
          "type": "string"
        },
        "method": {
          "$ref": "#/$defs/HTTPMethod"
        },
        "headers": {
          "items": {
            "$ref": "#/$defs/HTTPHeader"
          },
          "title": "Headers",
          "type": "array"
        },
        "cookies": {
          "items": {
            "$ref": "#/$defs/HTTPCookie"
          },
          "title": "Cookies",
          "type": "array"
        },
        "query_parameters": {
          "items": {
            "$ref": "#/$defs/HTTPQueryParameter"
          },
          "title": "Query Parameters",
          "type": "array"
        },
        "body": {
          "anyOf": [
            {},
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Body"
        }
      },
      "required": [
        "url",
        "method"
      ],
      "title": "HTTPRequestParameters",
      "type": "object"
    },
    "ProcedureConfiguration": {
      "properties": {
        "name": {
          "description": "The name of the procedure.",
          "title": "Name",
          "type": "string"
        },
        "requests": {
          "items": {
            "discriminator": {
              "mapping": {
                "basic": "#/$defs/BasicRequestConfiguration",
                "graphql": "#/$defs/GraphQLRequestConfiguration",
                "http": "#/$defs/HTTPRequestConfiguration"
              },
              "propertyName": "tech"
            },
            "oneOf": [
              {
                "$ref": "#/$defs/HTTPRequestConfiguration"
              },
              {
                "$ref": "#/$defs/GraphQLRequestConfiguration"
              },
              {
                "$ref": "#/$defs/BasicRequestConfiguration"
              }
            ]
          },
          "title": "Requests",
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "title": "ProcedureConfiguration",
      "type": "object"
    },
    "TokenInjection": {
      "properties": {
        "location": {
          "allOf": [
            {
              "$ref": "#/$defs/HTTPLocation"
            }
          ],
          "description": "The location of the HTTP request where the token should be injected"
        },
        "key": {
          "description": "The key to use for the injected token. Its usage depends on the location. For headers, cookies,and query parameters, this key describes the name of the header, cookie or query parameter. For a body location, the key is the field where the token should be injected within the request bodies",
          "examples": [
            "Authorization",
            "sessionId",
            "access_token"
          ],
          "title": "Key",
          "type": "string"
        },
        "prefix": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "A prefix to prepend to the token before it is injected",
          "examples": [
            "Bearer "
          ],
          "title": "Prefix"
        },
        "variable": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The name of a variable to retrieve to create the token's value. If not provided, the token will be infered as the first successful extraction of the procedure",
          "title": "Variable"
        }
      },
      "required": [
        "location",
        "key"
      ],
      "title": "TokenInjection",
      "type": "object"
    },
    "User": {
      "properties": {
        "name": {
          "description": "The name of the user",
          "title": "Name",
          "type": "string"
        },
        "credentials": {
          "allOf": [
            {
              "$ref": "#/$defs/Credentials"
            }
          ],
          "description": "The parameters use to customize requests sent for the user"
        },
        "authentication": {
          "allOf": [
            {
              "$ref": "#/$defs/UserAuthentication"
            }
          ],
          "description": "The authentication parameters of the user, including the authentication procedure to followand the description of how retrieved tokens should be injected in the user authentication result"
        },
        "refresh": {
          "anyOf": [
            {
              "$ref": "#/$defs/UserRefresh"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "An optional refresh procedure to follow for the user"
        }
      },
      "required": [
        "name",
        "credentials",
        "authentication"
      ],
      "title": "User",
      "type": "object"
    },
    "UserAuthentication": {
      "properties": {
        "procedure": {
          "description": "The name of the procedure to use to authenticate the user.This name MUST match the `name` field of a procedure in the `procedures` list in the multiauth configuration.",
          "title": "Procedure",
          "type": "string"
        },
        "injections": {
          "description": "List of variables injections to perform to create the authentication.",
          "items": {
            "$ref": "#/$defs/TokenInjection"
          },
          "title": "Injections",
          "type": "array"
        }
      },
      "required": [
        "procedure",
        "injections"
      ],
      "title": "UserAuthentication",
      "type": "object"
    },
    "UserRefresh": {
      "properties": {
        "procedure": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Procedure to use to refresh the authentication.Defaults to the user procedure if not provided. This name MUST match the `name` field of a procedure in the `procedures` list in the multiauth configuration.",
          "title": "Procedure"
        },
        "session_seconds": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Number of seconds to wait before refreshing the authentication. If not provided, multiauth willtry to infer the session duration from the returned variables",
          "title": "Session Seconds"
        },
        "injections": {
          "description": "List of injections to perform to create the refreshed authentication. If empty, the user's injections will be used to recreate an authentication object.",
          "items": {
            "$ref": "#/$defs/TokenInjection"
          },
          "title": "Injections",
          "type": "array"
        },
        "keep": {
          "default": false,
          "description": "If true, multiauth will keep the current tokens and use a merge of the refreshed authenticationand the current one.",
          "title": "Keep",
          "type": "boolean"
        },
        "credentials": {
          "anyOf": [
            {
              "$ref": "#/$defs/Credentials"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Credentials to use to refresh the authentication. If not provided, the user credentials will be used."
        }
      },
      "title": "UserRefresh",
      "type": "object"
    }
  },
  "description": "Multiauth configuration model.",
  "properties": {
    "procedures": {
      "description": "The list of authentication procedures to use",
      "items": {
        "$ref": "#/$defs/ProcedureConfiguration"
      },
      "title": "Procedures",
      "type": "array"
    },
    "users": {
      "description": "List of users that can be used in procedures",
      "items": {
        "$ref": "#/$defs/User"
      },
      "title": "Users",
      "type": "array"
    }
  },
  "title": "MultiauthConfiguration",
  "type": "object"
}